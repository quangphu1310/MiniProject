// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MiniProject_API.Data;

#nullable disable

namespace MiniProject_API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250402092255_AddProductTable")]
    partial class AddProductTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MiniProject_API.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Action"
                        },
                        new
                        {
                            Id = 2,
                            Name = "SciFi"
                        },
                        new
                        {
                            Id = 3,
                            Name = "History"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Fantasy"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Mystery"
                        });
                });

            modelBuilder.Entity("MiniProject_API.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "H.G. Wells",
                            CategoryId = 2,
                            Description = "A SciFi classic",
                            ISBN = "978-1-234567-01-1",
                            Price = 299.99000000000001,
                            Title = "The War of Worlds"
                        },
                        new
                        {
                            Id = 2,
                            Author = "Dan Brown",
                            CategoryId = 5,
                            Description = "A thrilling mystery novel",
                            ISBN = "978-1-234567-02-2",
                            Price = 199.99000000000001,
                            Title = "The Lost Symbol"
                        },
                        new
                        {
                            Id = 3,
                            Author = "Stephen Hawking",
                            CategoryId = 3,
                            Description = "Understanding the universe",
                            ISBN = "978-1-234567-03-3",
                            Price = 349.99000000000001,
                            Title = "A Brief History of Time"
                        },
                        new
                        {
                            Id = 4,
                            Author = "Frank Herbert",
                            CategoryId = 2,
                            Description = "An epic SciFi saga",
                            ISBN = "978-1-234567-04-4",
                            Price = 399.99000000000001,
                            Title = "Dune"
                        },
                        new
                        {
                            Id = 5,
                            Author = "J.K. Rowling",
                            CategoryId = 4,
                            Description = "A young wizard's journey",
                            ISBN = "978-1-234567-05-5",
                            Price = 299.99000000000001,
                            Title = "Harry Potter and the Sorcerer's Stone"
                        },
                        new
                        {
                            Id = 6,
                            Author = "J.R.R. Tolkien",
                            CategoryId = 4,
                            Description = "A fantasy adventure",
                            ISBN = "978-1-234567-06-6",
                            Price = 279.99000000000001,
                            Title = "The Hobbit"
                        },
                        new
                        {
                            Id = 7,
                            Author = "Dan Brown",
                            CategoryId = 5,
                            Description = "A historical mystery",
                            ISBN = "978-1-234567-07-7",
                            Price = 219.99000000000001,
                            Title = "The Da Vinci Code"
                        },
                        new
                        {
                            Id = 8,
                            Author = "Orson Scott Card",
                            CategoryId = 2,
                            Description = "A SciFi military story",
                            ISBN = "978-1-234567-08-8",
                            Price = 259.99000000000001,
                            Title = "Ender's Game"
                        },
                        new
                        {
                            Id = 9,
                            Author = "Sun Tzu",
                            CategoryId = 3,
                            Description = "A military strategy book",
                            ISBN = "978-1-234567-09-9",
                            Price = 149.99000000000001,
                            Title = "The Art of War"
                        },
                        new
                        {
                            Id = 10,
                            Author = "George Orwell",
                            CategoryId = 3,
                            Description = "A dystopian classic",
                            ISBN = "978-1-234567-10-0",
                            Price = 189.99000000000001,
                            Title = "1984"
                        });
                });

            modelBuilder.Entity("MiniProject_API.Models.Product", b =>
                {
                    b.HasOne("MiniProject_API.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });
#pragma warning restore 612, 618
        }
    }
}
